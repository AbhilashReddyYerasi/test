MERGE INTO RAW.AIRTABLE.SHIPPER_INFORMATION AS C
USING (
    WITH 
    PARSED_DATA AS (
        SELECT
            VAR:id::VARCHAR AS ID,
            TO_TIMESTAMP_TZ(VAR:createdTime::VARCHAR) AS CREATED_TIME,
            VAR:PROJECT_ID::VARCHAR AS PROJECT_ID,
            VAR:PROJECT_NAME::VARCHAR AS PROJECT_NAME,
            VAR:GROUP_NAME::VARCHAR AS GROUP_NAME,
            VAR:PROJECT_CATEGORY::VARCHAR AS PROJECT_CATEGORY,
            VAR:VISIBILITY_PRIORITY::VARCHAR AS VISIBILITY_PRIORITY,
            VAR:POD_OWNER::VARCHAR AS POD_OWNER,
            VAR:KPI::VARCHAR AS KPI,
            VAR:WEEKEND_REQUEST::VARCHAR AS WEEKEND_REQUEST,
            VAR:DHL_CFX_NAME::VARCHAR AS DHL_CFX_NAME,
            VAR:DHL_CID_NUMBER::VARCHAR AS DHL_CID_NUMBER,
            VAR:DHL_CID_NAME::VARCHAR AS DHL_CID_NAME,
            VAR:DHL_DESC::VARCHAR AS DHL_DESC,
            VAR:POD_ON_TIME::NUMBER AS POD_ON_TIME,
            VAR:SERVICE_TRANSPARENCY::NUMBER AS SERVICE_TRANSPARENCY,
            VAR:ON_DAY_COLLECTION::NUMBER AS ON_DAY_COLLECTION,
            VAR:ON_DAY_DELIVERY::NUMBER AS ON_DAY_DELIVERY
        FROM RAW.AIRTABLE.LOAD_SHIPPER_INFORMATION_STREAM
    ),
    NEW_STATE AS (
        SELECT *, HASH(*) AS _HASH FROM PARSED_DATA
    ),
    OLD_STATE AS (
        SELECT * FROM RAW.AIRTABLE.SHIPPER_INFORMATION WHERE _IS_ACTIVE = TRUE
    ),
    DIFF AS (
      SELECT COALESCE(OLD.PROJECT_ID, NEW.PROJECT_ID) AS DML_PROJECT_ID,
      OLD.PROJECT_ID IS NULL AS IS_INSERT,
      NEW.PROJECT_ID IS NULL AS IS_DELETE,
      (OLD.PROJECT_ID IS NOT NULL AND NEW.PROJECT_ID IS NOT NULL AND OLD._HASH <> NEW._HASH) AS IS_UPDATE,
      NEW.*
      FROM NEW_STATE NEW FULL OUTER JOIN OLD_STATE OLD ON OLD.PROJECT_ID = NEW.PROJECT_ID
    ),
    DB_CHANGES AS (
      SELECT *, 'INSERT' AS DML FROM DIFF WHERE IS_INSERT = TRUE OR IS_UPDATE = TRUE
      UNION
      SELECT *, 'DELETE' AS DML FROM DIFF WHERE IS_DELETE = TRUE OR IS_UPDATE = TRUE
    )
  SELECT * FROM DB_CHANGES
) AS S
ON C.PROJECT_ID = S.DML_PROJECT_ID AND S.DML = 'DELETE'
WHEN MATCHED AND C._IS_ACTIVE
THEN UPDATE SET C._VALID_TO = SYSDATE(), C._IS_ACTIVE = FALSE
WHEN NOT MATCHED AND S.DML = 'INSERT' THEN INSERT (
    ID,
    CREATED_TIME,
    PROJECT_ID,
    PROJECT_NAME,
    GROUP_NAME,
    PROJECT_CATEGORY,
    VISIBILITY_PRIORITY,
    POD_OWNER,
    KPI,
    WEEKEND_REQUEST,
    DHL_CFX_NAME,
    DHL_CID_NUMBER,
    DHL_CID_NAME,
    DHL_DESC,
    POD_ON_TIME,
    SERVICE_TRANSPARENCY,
    ON_DAY_COLLECTION,
    ON_DAY_DELIVERY,
    _HASH,
    _VALID_FROM,
    _VALID_TO,
    _IS_ACTIVE
) VALUES (
    S.ID,
    S.CREATED_TIME,
    S.PROJECT_ID,
    S.PROJECT_NAME,
    S.GROUP_NAME,
    S.PROJECT_CATEGORY,
    S.VISIBILITY_PRIORITY,
    S.POD_OWNER,
    S.KPI,
    S.WEEKEND_REQUEST,
    S.DHL_CFX_NAME,
    S.DHL_CID_NUMBER,
    S.DHL_CID_NAME,
    S.DHL_DESC,
    S.POD_ON_TIME,
    S.SERVICE_TRANSPARENCY,
    S.ON_DAY_COLLECTION,
    S.ON_DAY_DELIVERY,
    S._HASH,
    SYSDATE(),
    NULL,
    TRUE
)
