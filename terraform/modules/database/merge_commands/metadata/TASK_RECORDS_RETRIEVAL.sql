INSERT INTO RAW.METADATA.TASK_RECORD (
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERCOMPANY_MERGE_TASK' ))
 WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERCOMPLIANCEREQUIREMENTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERCONTACTDETAILS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERCOSTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERFINANCEDETAILS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERINVOICES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERLIVERATEOFFERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERLIVERATESUBMITTEDOFFERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERTRUCKS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CARRIERUSERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CONTRACTBUYRATEAGREEMENTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CONTRACTBUYRATES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CONTRACTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_CONTRACTSELLRATEAGREEMENTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_INVOICES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_JOBFILES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_PROFILEUSERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_PURCHASEORDERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_SHIPPERCOSTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_SHIPPERENTITIES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_SHIPPERINFOS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_SHIPPERPROJECTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRACTIONCONTRACTBUYRATES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRACTIONCONTRACTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTLOCATIONS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTLOCATIONSEXT_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTORDERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTREFERENCES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTREQUIREMENTS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTROUTES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_TRANSPORTSTATUSES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_ADTTRANSPORTORDERS_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_OFFERHISTORIES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_OFFERITEMACTIONHISTORIES_MERGE_TASK' ))
  WHERE STATE !='SKIPPED'
 UNION ALL
    SELECT * 
    FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(
     SCHEDULED_TIME_RANGE_START => DATEADD(days,-1,(CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ)
      , SCHEDULED_TIME_RANGE_END => (CURRENT_TIMESTAMP()::date||' 00:00Z')::TIMESTAMP_LTZ
      , RESULT_LIMIT => 10000
       ,TASK_NAME => 'LOAD_OFFERITEMHISTORIES_MERGE_TASK' ))
    WHERE STATE != 'SKIPPED'
)