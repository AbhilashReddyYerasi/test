{% from 'macros/shared_v1.j2' import create_merge_task -%}

{% set table_name = "dg_shipment_stop" %}

{% set columns =
        [
        ('shipment_gid', "var:SHIPMENT_GID::varchar"),
        ('stop_num', "nullif(var:STOP_NUM::varchar, '')::number(38,0)"),
        ('location_gid', "var:LOCATION_GID::varchar"),
        ('location_role_gid', "var:LOCATION_ROLE_GID::varchar"),
        ('planned_arrival', "nullif(var:PLANNED_ARRIVAL::varchar, '')::timestamp_tz(9)"),
        ('estimated_arrival', "nullif(var:ESTIMATED_ARRIVAL::varchar, '')::timestamp_tz(9)"),
        ('is_fixed_arrival', "var:IS_FIXED_ARRIVAL::boolean"),
        ('actual_arrival', "nullif(var:ACTUAL_ARRIVAL::varchar, '')::timestamp_tz(9)"),
        ('planned_departure', "nullif(var:PLANNED_DEPARTURE::varchar, '')::timestamp_tz(9)"),
        ('estimated_departure', "nullif(var:ESTIMATED_DEPARTURE::varchar, '')::timestamp_tz(9)"),
        ('is_fixed_departure', "var:IS_FIXED_DEPARTURE::boolean"),
        ('actual_departure', "nullif(var:ACTUAL_DEPARTURE::varchar, '')::timestamp_tz(9)"),
        ('wait_time', "nullif(var:WAIT_TIME::varchar, '')::number(38,2)"),
        ('wait_time_uom_code', "var:WAIT_TIME_UOM_CODE::varchar"),
        ('wait_time_base', "nullif(var:WAIT_TIME_BASE::varchar, '')::number(38,2)"),
        ('rest_time', "nullif(var:REST_TIME::varchar, '')::number(38,2)"),
        ('rest_time_uom_code', "var:REST_TIME_UOM_CODE::varchar"),
        ('rest_time_base', "nullif(var:REST_TIME_BASE::varchar, '')::number(38,2)"),
        ('drive_time', "nullif(var:DRIVE_TIME::varchar, '')::number(38,2)"),
        ('drive_time_uom_code', "var:DRIVE_TIME_UOM_CODE::varchar"),
        ('drive_time_base', "nullif(var:DRIVE_TIME_BASE::varchar, '')::number(38,2)"),
        ('dist_from_prev_stop', "nullif(var:DIST_FROM_PREV_STOP::varchar, '')::number(38,2)"),
        ('dist_from_prev_stop_uom_code', "var:DIST_FROM_PREV_STOP_UOM_CODE::varchar"),
        ('dist_from_prev_stop_base', "nullif(var:DIST_FROM_PREV_STOP_BASE::varchar, '')::number(38,2)"),
        ('activity_time', "nullif(var:ACTIVITY_TIME::varchar, '')::number(38,2)"),
        ('activity_time_uom_code', "var:ACTIVITY_TIME_UOM_CODE::varchar"),
        ('activity_time_base', "nullif(var:ACTIVITY_TIME_BASE::varchar, '')::number(38,2)"),
        ('is_permanent', "var:IS_PERMANENT::boolean"),
        ('is_depot', "var:IS_DEPOT::boolean"),
        ('appointment_pickup', "var:APPOINTMENT_PICKUP::varchar"),
        ('appointment_delivery', "var:APPOINTMENT_DELIVERY::varchar"),
        ('accessorial_time', "nullif(var:ACCESSORIAL_TIME::varchar, '')::number(38,2)"),
        ('accessorial_time_uom_code', "var:ACCESSORIAL_TIME_UOM_CODE::varchar"),
        ('accessorial_time_base', "nullif(var:ACCESSORIAL_TIME_BASE::varchar, '')::number(38,2)"),
        ('parent_location_gid', "var:PARENT_LOCATION_GID::varchar"),
        ('location_override_gid', "var:LOCATION_OVERRIDE_GID::varchar"),
        ('stop_requirement_type', "var:STOP_REQUIREMENT_TYPE::varchar"),
        ('rate_service_gid', "var:RATE_SERVICE_GID::varchar"),
        ('arbitrary_type', "var:ARBITRARY_TYPE::varchar"),
        ('is_fixed_distance', "var:IS_FIXED_DISTANCE::boolean"),
        ('ext_seq_no', "nullif(var:EXT_SEQ_NO::varchar, '')::number(38,2)"),
        ('rush_hour_time', "nullif(var:RUSH_HOUR_TIME::varchar, '')::number(38,2)"),
        ('rush_hour_time_uom_code', "var:RUSH_HOUR_TIME_UOM_CODE::varchar"),
        ('rush_hour_time_base', "nullif(var:RUSH_HOUR_TIME_BASE::varchar, '')::number(38,2)"),
        ('voyage_gid', "var:VOYAGE_GID::varchar"),
        ('is_mother_vessel', "var:IS_MOTHER_VESSEL::boolean"),
        ('flight_instance_id', "var:FLIGHT_INSTANCE_ID::varchar"),
        ('repetition_schedule_gid', "var:REPETITION_SCHEDULE_GID::varchar"),
        ('stop_type', "var:STOP_TYPE::varchar"),
        ('slack_variance', "var:SLACK_VARIANCE::varchar"),
        ('driver_non_payable', "var:DRIVER_NON_PAYABLE::varchar"),
        ('repetition_sched_stop_number', "nullif(var:REPETITION_SCHED_STOP_NUMBER::varchar, '')::number(38,2)"),
        ('distance_type', "var:DISTANCE_TYPE::varchar"),
        ('attribute1', "var:ATTRIBUTE1::varchar"),
        ('attribute2', "var:ATTRIBUTE2::varchar"),
        ('attribute3', "var:ATTRIBUTE3::varchar"),
        ('attribute4', "var:ATTRIBUTE4::varchar"),
        ('attribute5', "var:ATTRIBUTE5::varchar"),
        ('attribute6', "var:ATTRIBUTE6::varchar"),
        ('attribute7', "var:ATTRIBUTE7::varchar"),
        ('attribute8', "var:ATTRIBUTE8::varchar"),
        ('attribute9', "var:ATTRIBUTE9::varchar"),
        ('attribute10', "var:ATTRIBUTE10::varchar"),
        ('attribute11', "var:ATTRIBUTE11::varchar"),
        ('attribute12', "var:ATTRIBUTE12::varchar"),
        ('attribute13', "var:ATTRIBUTE13::varchar"),
        ('attribute14', "var:ATTRIBUTE14::varchar"),
        ('attribute15', "var:ATTRIBUTE15::varchar"),
        ('attribute16', "var:ATTRIBUTE16::varchar"),
        ('attribute17', "var:ATTRIBUTE17::varchar"),
        ('attribute18', "var:ATTRIBUTE18::varchar"),
        ('attribute19', "var:ATTRIBUTE19::varchar"),
        ('attribute20', "var:ATTRIBUTE20::varchar"),
        ('attribute_number1', "nullif(var:ATTRIBUTE_NUMBER1::varchar, '')::number(38,2)"),
        ('attribute_number2', "nullif(var:ATTRIBUTE_NUMBER2::varchar, '')::number(38,2)"),
        ('attribute_number3', "nullif(var:ATTRIBUTE_NUMBER3::varchar, '')::number(38,2)"),
        ('attribute_number4', "nullif(var:ATTRIBUTE_NUMBER4::varchar, '')::number(38,2)"),
        ('attribute_number5', "nullif(var:ATTRIBUTE_NUMBER5::varchar, '')::number(38,2)"),
        ('attribute_number6', "nullif(var:ATTRIBUTE_NUMBER6::varchar, '')::number(38,2)"),
        ('attribute_number7', "nullif(var:ATTRIBUTE_NUMBER7::varchar, '')::number(38,2)"),
        ('attribute_number8', "nullif(var:ATTRIBUTE_NUMBER8::varchar, '')::number(38,2)"),
        ('attribute_number9', "nullif(var:ATTRIBUTE_NUMBER9::varchar, '')::number(38,2)"),
        ('attribute_number10', "nullif(var:ATTRIBUTE_NUMBER10::varchar, '')::number(38,2)"),
        ('attribute_date1', "nullif(var:ATTRIBUTE_DATE1::varchar, '')::timestamp_tz(9)"),
        ('attribute_date2', "nullif(var:ATTRIBUTE_DATE2::varchar, '')::timestamp_tz(9)"),
        ('attribute_date3', "nullif(var:ATTRIBUTE_DATE3::varchar, '')::timestamp_tz(9)"),
        ('attribute_date4', "nullif(var:ATTRIBUTE_DATE4::varchar, '')::timestamp_tz(9)"),
        ('attribute_date5', "nullif(var:ATTRIBUTE_DATE5::varchar, '')::timestamp_tz(9)"),
        ('attribute_date6', "nullif(var:ATTRIBUTE_DATE6::varchar, '')::timestamp_tz(9)"),
        ('attribute_date7', "nullif(var:ATTRIBUTE_DATE7::varchar, '')::timestamp_tz(9)"),
        ('attribute_date8', "nullif(var:ATTRIBUTE_DATE8::varchar, '')::timestamp_tz(9)"),
        ('attribute_date9', "nullif(var:ATTRIBUTE_DATE9::varchar, '')::timestamp_tz(9)"),
        ('attribute_date10', "nullif(var:ATTRIBUTE_DATE10::varchar, '')::timestamp_tz(9)"),
        ('appointment_window_start', "nullif(var:APPOINTMENT_WINDOW_START::varchar, '')::timestamp_tz(9)"),
        ('appointment_window_end', "nullif(var:APPOINTMENT_WINDOW_END::varchar, '')::timestamp_tz(9)"),
        ('domain_name', "var:DOMAIN_NAME::varchar"),
        ('insert_user', "var:INSERT_USER::varchar"),
        ('insert_date', "nullif(var:INSERT_DATE::varchar, '')::timestamp_tz(9)"),
        ('update_user', "var:UPDATE_USER::varchar"),
        ('update_date', "coalesce(nullif(var:UPDATE_DATE::varchar, ''), nullif(var:INSERT_DATE::varchar, ''))::timestamp_tz(9)"),
        ('rate_distance_gid', "var:RATE_DISTANCE_GID::varchar"),
        ('route_code_gid', "var:ROUTE_CODE_GID::varchar"),
        ("load_ts", "convert_timezone('UTC',current_timestamp)::timestamp_tz")
        ]
%}

{% call create_merge_task(load_cfx_schema, table_name) -%}
merge into {{ cfx_schema }}.{{ table_name }} as t
using(
    with transformed_{{ table_name }} as (
            select
                {% for name, source in columns -%}
                    {{ source }} as {{ name }}{% if not loop.last %},{% endif %}
                {% endfor -%}
            from {{load_cfx_schema}}.load_{{ table_name }}_stream
        )
    select * from (
            select
                *,
                row_number() over (partition by shipment_gid,stop_num
                    order by greatest(
                            coalesce(
                                insert_date,
                                update_date
                            ),
                            coalesce(
                                update_date,
                                insert_date
                            )
                        ) desc nulls last)
                as rn
            from transformed_{{ table_name }}
        ) where rn = 1
) as s
ON (
    t.shipment_gid = s.shipment_gid
    and t.stop_num = s.stop_num
) 
when matched and not (
    {% for name, _ in columns -%}
        equal_null(t.{{ name }}, s.{{ name }}) {% if not loop.last %}and{% endif %}
    {% endfor -%}
) and s.update_date > t.update_date
then update set
    {% for name, _ in columns -%}
        t.{{ name }} = s.{{ name }}{% if not loop.last %},{% endif %}
    {% endfor -%}
when not matched then insert (
    {% for name, _ in columns -%}
        {{ name }}{% if not loop.last %},{% endif %}
    {% endfor -%}
) 
values (
    {% for name, _ in columns -%}
        s.{{ name }}{% if not loop.last %},{% endif %}
    {% endfor -%}
)
{%- endcall %}